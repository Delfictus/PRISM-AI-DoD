# Docker Compose for PRISM-AI API Server
# Includes API server, monitoring, and supporting services

version: '3.8'

services:
  # PRISM-AI API Server
  api-server:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: prism-api-server
    ports:
      - "8080:8080"
    environment:
      - RUST_LOG=info
      - API_HOST=0.0.0.0
      - API_PORT=8080
      - API_KEY=${API_KEY:-changeme}
    volumes:
      - ./logs:/app/logs
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    restart: unless-stopped
    networks:
      - prism-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prism-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - prism-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: prism-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    networks:
      - prism-network
    depends_on:
      - prometheus

  # Redis for caching (semantic cache, rate limiting)
  redis:
    image: redis:7-alpine
    container_name: prism-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - prism-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # NGINX as reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: prism-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    restart: unless-stopped
    networks:
      - prism-network
    depends_on:
      - api-server

networks:
  prism-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
  redis-data:
