apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prism-api-ingress
  namespace: prism-ai
  annotations:
    # NGINX Ingress Controller
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "100"
    nginx.ingress.kubernetes.io/limit-connections: "10"

    # CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization, Content-Type, X-API-Key"

    # WebSocket support
    nginx.ingress.kubernetes.io/websocket-services: "prism-api-service"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"

    # SSL/TLS
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

    # Request size
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"

    # Timeout
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
spec:
  tls:
  - hosts:
    - api.prism-ai.example.com
    secretName: prism-api-tls

  rules:
  - host: api.prism-ai.example.com
    http:
      paths:
      # REST API endpoints
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: prism-api-service
            port:
              number: 80

      # WebSocket endpoint
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: prism-api-service
            port:
              number: 80

      # Health check
      - path: /health
        pathType: Exact
        backend:
          service:
            name: prism-api-service
            port:
              number: 80

      # Root
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prism-api-service
            port:
              number: 80

---
# Internal ingress for cluster-only access (optional)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prism-api-internal
  namespace: prism-ai
  annotations:
    kubernetes.io/ingress.class: "nginx-internal"
spec:
  rules:
  - host: prism-api.internal
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prism-api-service
            port:
              number: 80
