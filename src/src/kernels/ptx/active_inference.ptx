//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-35583870
// Cuda compilation tools, release 12.8, V12.8.93
// Based on NVVM 7.0.1
//

.version 8.7
.target sm_70
.address_size 64

	// .globl	gemv_kernel
// _ZZ20sum_reduction_kernelE6shared has been demoted

.visible .entry gemv_kernel(
	.param .u64 gemv_kernel_param_0,
	.param .u64 gemv_kernel_param_1,
	.param .u64 gemv_kernel_param_2,
	.param .u32 gemv_kernel_param_3,
	.param .u32 gemv_kernel_param_4,
	.param .f64 gemv_kernel_param_5,
	.param .f64 gemv_kernel_param_6,
	.param .u32 gemv_kernel_param_7
)
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<43>;
	.reg .f64 	%fd<67>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd28, [gemv_kernel_param_0];
	ld.param.u64 	%rd29, [gemv_kernel_param_1];
	ld.param.u64 	%rd30, [gemv_kernel_param_2];
	ld.param.u32 	%r20, [gemv_kernel_param_3];
	ld.param.u32 	%r21, [gemv_kernel_param_4];
	ld.param.f64 	%fd15, [gemv_kernel_param_5];
	ld.param.f64 	%fd16, [gemv_kernel_param_6];
	ld.param.u32 	%r22, [gemv_kernel_param_7];
	cvta.to.global.u64 	%rd1, %rd30;
	cvta.to.global.u64 	%rd2, %rd29;
	mov.u32 	%r23, %ntid.x;
	mov.u32 	%r24, %ctaid.x;
	mov.u32 	%r25, %tid.x;
	mad.lo.s32 	%r1, %r24, %r23, %r25;
	cvta.to.global.u64 	%rd31, %rd28;
	mul.wide.s32 	%rd32, %r1, 8;
	add.s64 	%rd3, %rd31, %rd32;
	setp.eq.s32 	%p1, %r22, 0;
	@%p1 bra 	$L__BB0_10;

	setp.ge.s32 	%p2, %r1, %r21;
	@%p2 bra 	$L__BB0_19;

	setp.lt.s32 	%p3, %r20, 1;
	mov.f64 	%fd61, 0d0000000000000000;
	@%p3 bra 	$L__BB0_9;

	add.s32 	%r27, %r20, -1;
	and.b32  	%r38, %r20, 3;
	setp.lt.u32 	%p4, %r27, 3;
	mov.f64 	%fd61, 0d0000000000000000;
	mov.u32 	%r37, 0;
	@%p4 bra 	$L__BB0_6;

	sub.s32 	%r36, %r20, %r38;
	add.s64 	%rd43, %rd2, %rd32;
	mul.wide.s32 	%rd5, %r21, 8;
	mov.f64 	%fd61, 0d0000000000000000;
	mov.u32 	%r37, 0;
	mov.u64 	%rd42, %rd1;

$L__BB0_5:
	ld.global.f64 	%fd21, [%rd42];
	ld.global.f64 	%fd22, [%rd43];
	fma.rn.f64 	%fd23, %fd22, %fd21, %fd61;
	add.s64 	%rd34, %rd43, %rd5;
	ld.global.f64 	%fd24, [%rd42+8];
	ld.global.f64 	%fd25, [%rd34];
	fma.rn.f64 	%fd26, %fd25, %fd24, %fd23;
	add.s64 	%rd35, %rd34, %rd5;
	ld.global.f64 	%fd27, [%rd42+16];
	ld.global.f64 	%fd28, [%rd35];
	fma.rn.f64 	%fd29, %fd28, %fd27, %fd26;
	add.s64 	%rd36, %rd35, %rd5;
	add.s64 	%rd43, %rd36, %rd5;
	ld.global.f64 	%fd30, [%rd42+24];
	ld.global.f64 	%fd31, [%rd36];
	fma.rn.f64 	%fd61, %fd31, %fd30, %fd29;
	add.s32 	%r37, %r37, 4;
	add.s64 	%rd42, %rd42, 32;
	add.s32 	%r36, %r36, -4;
	setp.ne.s32 	%p5, %r36, 0;
	@%p5 bra 	$L__BB0_5;

$L__BB0_6:
	setp.eq.s32 	%p6, %r38, 0;
	@%p6 bra 	$L__BB0_9;

	mul.wide.s32 	%rd37, %r37, 8;
	add.s64 	%rd45, %rd1, %rd37;
	mad.lo.s32 	%r29, %r37, %r21, %r1;
	mul.wide.s32 	%rd38, %r29, 8;
	add.s64 	%rd44, %rd2, %rd38;
	mul.wide.s32 	%rd12, %r21, 8;

$L__BB0_8:
	.pragma "nounroll";
	ld.global.f64 	%fd32, [%rd45];
	ld.global.f64 	%fd33, [%rd44];
	fma.rn.f64 	%fd61, %fd33, %fd32, %fd61;
	add.s64 	%rd45, %rd45, 8;
	add.s64 	%rd44, %rd44, %rd12;
	add.s32 	%r38, %r38, -1;
	setp.ne.s32 	%p7, %r38, 0;
	@%p7 bra 	$L__BB0_8;

$L__BB0_9:
	ld.global.f64 	%fd34, [%rd3];
	mul.f64 	%fd35, %fd34, %fd16;
	fma.rn.f64 	%fd36, %fd61, %fd15, %fd35;
	st.global.f64 	[%rd3], %fd36;
	bra.uni 	$L__BB0_19;

$L__BB0_10:
	setp.ge.s32 	%p8, %r1, %r20;
	@%p8 bra 	$L__BB0_19;

	setp.lt.s32 	%p9, %r21, 1;
	mov.f64 	%fd66, 0d0000000000000000;
	@%p9 bra 	$L__BB0_18;

	add.s32 	%r31, %r21, -1;
	and.b32  	%r42, %r21, 3;
	setp.lt.u32 	%p10, %r31, 3;
	mov.f64 	%fd66, 0d0000000000000000;
	mov.u32 	%r41, 0;
	@%p10 bra 	$L__BB0_15;

	sub.s32 	%r40, %r21, %r42;
	mul.lo.s32 	%r33, %r21, %r1;
	mul.wide.s32 	%rd39, %r33, 8;
	add.s64 	%rd47, %rd2, %rd39;
	mov.f64 	%fd66, 0d0000000000000000;
	mov.u32 	%r41, 0;
	mov.u64 	%rd46, %rd1;

$L__BB0_14:
	ld.global.f64 	%fd41, [%rd46];
	ld.global.f64 	%fd42, [%rd47];
	fma.rn.f64 	%fd43, %fd42, %fd41, %fd66;
	ld.global.f64 	%fd44, [%rd46+8];
	ld.global.f64 	%fd45, [%rd47+8];
	fma.rn.f64 	%fd46, %fd45, %fd44, %fd43;
	ld.global.f64 	%fd47, [%rd46+16];
	ld.global.f64 	%fd48, [%rd47+16];
	fma.rn.f64 	%fd49, %fd48, %fd47, %fd46;
	ld.global.f64 	%fd50, [%rd46+24];
	ld.global.f64 	%fd51, [%rd47+24];
	fma.rn.f64 	%fd66, %fd51, %fd50, %fd49;
	add.s32 	%r41, %r41, 4;
	add.s64 	%rd47, %rd47, 32;
	add.s64 	%rd46, %rd46, 32;
	add.s32 	%r40, %r40, -4;
	setp.ne.s32 	%p11, %r40, 0;
	@%p11 bra 	$L__BB0_14;

$L__BB0_15:
	setp.eq.s32 	%p12, %r42, 0;
	@%p12 bra 	$L__BB0_18;

	mul.wide.s32 	%rd40, %r41, 8;
	add.s64 	%rd49, %rd1, %rd40;
	mad.lo.s32 	%r34, %r21, %r1, %r41;
	mul.wide.s32 	%rd41, %r34, 8;
	add.s64 	%rd48, %rd2, %rd41;

$L__BB0_17:
	.pragma "nounroll";
	ld.global.f64 	%fd52, [%rd49];
	ld.global.f64 	%fd53, [%rd48];
	fma.rn.f64 	%fd66, %fd53, %fd52, %fd66;
	add.s64 	%rd49, %rd49, 8;
	add.s64 	%rd48, %rd48, 8;
	add.s32 	%r42, %r42, -1;
	setp.ne.s32 	%p13, %r42, 0;
	@%p13 bra 	$L__BB0_17;

$L__BB0_18:
	ld.global.f64 	%fd54, [%rd3];
	mul.f64 	%fd55, %fd54, %fd16;
	fma.rn.f64 	%fd56, %fd66, %fd15, %fd55;
	st.global.f64 	[%rd3], %fd56;

$L__BB0_19:
	ret;

}
	// .globl	prediction_error_kernel
.visible .entry prediction_error_kernel(
	.param .u64 prediction_error_kernel_param_0,
	.param .u64 prediction_error_kernel_param_1,
	.param .u64 prediction_error_kernel_param_2,
	.param .u64 prediction_error_kernel_param_3,
	.param .u32 prediction_error_kernel_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd1, [prediction_error_kernel_param_0];
	ld.param.u64 	%rd2, [prediction_error_kernel_param_1];
	ld.param.u64 	%rd3, [prediction_error_kernel_param_2];
	ld.param.u64 	%rd4, [prediction_error_kernel_param_3];
	ld.param.u32 	%r2, [prediction_error_kernel_param_4];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB1_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 8;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f64 	%fd1, [%rd9];
	ld.global.f64 	%fd2, [%rd7];
	sub.f64 	%fd3, %fd2, %fd1;
	cvta.to.global.u64 	%rd10, %rd4;
	add.s64 	%rd11, %rd10, %rd6;
	ld.global.f64 	%fd4, [%rd11];
	mul.f64 	%fd5, %fd4, %fd3;
	cvta.to.global.u64 	%rd12, %rd1;
	add.s64 	%rd13, %rd12, %rd6;
	st.global.f64 	[%rd13], %fd5;

$L__BB1_2:
	ret;

}
	// .globl	belief_update_kernel
.visible .entry belief_update_kernel(
	.param .u64 belief_update_kernel_param_0,
	.param .u64 belief_update_kernel_param_1,
	.param .f64 belief_update_kernel_param_2,
	.param .u32 belief_update_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [belief_update_kernel_param_0];
	ld.param.u64 	%rd2, [belief_update_kernel_param_1];
	ld.param.f64 	%fd1, [belief_update_kernel_param_2];
	ld.param.u32 	%r2, [belief_update_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB2_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd2, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f64 	%fd3, [%rd7];
	fma.rn.f64 	%fd4, %fd2, %fd1, %fd3;
	st.global.f64 	[%rd7], %fd4;

$L__BB2_2:
	ret;

}
	// .globl	precision_weight_kernel
.visible .entry precision_weight_kernel(
	.param .u64 precision_weight_kernel_param_0,
	.param .u64 precision_weight_kernel_param_1,
	.param .u64 precision_weight_kernel_param_2,
	.param .u32 precision_weight_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [precision_weight_kernel_param_0];
	ld.param.u64 	%rd2, [precision_weight_kernel_param_1];
	ld.param.u64 	%rd3, [precision_weight_kernel_param_2];
	ld.param.u32 	%r2, [precision_weight_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB3_2;

	cvta.to.global.u64 	%rd4, %rd3;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f64 	%fd1, [%rd8];
	ld.global.f64 	%fd2, [%rd6];
	mul.f64 	%fd3, %fd2, %fd1;
	cvta.to.global.u64 	%rd9, %rd1;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f64 	[%rd10], %fd3;

$L__BB3_2:
	ret;

}
	// .globl	kl_divergence_kernel
.visible .entry kl_divergence_kernel(
	.param .u64 kl_divergence_kernel_param_0,
	.param .u64 kl_divergence_kernel_param_1,
	.param .u64 kl_divergence_kernel_param_2,
	.param .u64 kl_divergence_kernel_param_3,
	.param .u64 kl_divergence_kernel_param_4,
	.param .u32 kl_divergence_kernel_param_5
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<33>;
	.reg .f64 	%fd<72>;
	.reg .b64 	%rd<19>;


	ld.param.u64 	%rd3, [kl_divergence_kernel_param_0];
	ld.param.u64 	%rd4, [kl_divergence_kernel_param_1];
	ld.param.u64 	%rd5, [kl_divergence_kernel_param_2];
	ld.param.u64 	%rd6, [kl_divergence_kernel_param_3];
	ld.param.u64 	%rd7, [kl_divergence_kernel_param_4];
	ld.param.u32 	%r12, [kl_divergence_kernel_param_5];
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r14, %ntid.x;
	mov.u32 	%r15, %tid.x;
	mad.lo.s32 	%r1, %r13, %r14, %r15;
	setp.ge.s32 	%p1, %r1, %r12;
	@%p1 bra 	$L__BB4_9;

	cvta.to.global.u64 	%rd8, %rd3;
	cvta.to.global.u64 	%rd1, %rd7;
	cvt.s64.s32 	%rd2, %r1;
	mul.wide.s32 	%rd9, %r1, 8;
	add.s64 	%rd10, %rd8, %rd9;
	cvta.to.global.u64 	%rd11, %rd4;
	add.s64 	%rd12, %rd11, %rd9;
	ld.global.f64 	%fd12, [%rd12];
	ld.global.f64 	%fd13, [%rd10];
	sub.f64 	%fd14, %fd13, %fd12;
	cvta.to.global.u64 	%rd13, %rd5;
	add.s64 	%rd14, %rd13, %rd9;
	cvta.to.global.u64 	%rd15, %rd6;
	add.s64 	%rd16, %rd15, %rd9;
	ld.global.f64 	%fd15, [%rd16];
	setp.lt.f64 	%p2, %fd15, 0d3DDB7CDFD9D7BDBB;
	selp.f64 	%fd16, 0d3DDB7CDFD9D7BDBB, %fd15, %p2;
	ld.global.f64 	%fd17, [%rd14];
	setp.lt.f64 	%p3, %fd17, 0d3DDB7CDFD9D7BDBB;
	selp.f64 	%fd18, 0d3DDB7CDFD9D7BDBB, %fd17, %p3;
	div.rn.f64 	%fd1, %fd18, %fd16;
	mul.f64 	%fd19, %fd14, %fd14;
	div.rn.f64 	%fd2, %fd19, %fd16;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r29}, %fd1;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r30, %temp}, %fd1;
	}
	setp.gt.s32 	%p4, %r29, 1048575;
	mov.u32 	%r31, -1023;
	mov.f64 	%fd69, %fd1;
	@%p4 bra 	$L__BB4_3;

	mul.f64 	%fd69, %fd1, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r29}, %fd69;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r30, %temp}, %fd69;
	}
	mov.u32 	%r31, -1077;

$L__BB4_3:
	add.s32 	%r18, %r29, -1;
	setp.lt.u32 	%p5, %r18, 2146435071;
	add.f64 	%fd5, %fd1, %fd2;
	@%p5 bra 	$L__BB4_5;
	bra.uni 	$L__BB4_4;

$L__BB4_5:
	shr.u32 	%r20, %r29, 20;
	add.s32 	%r32, %r31, %r20;
	and.b32  	%r21, %r29, -2146435073;
	or.b32  	%r22, %r21, 1072693248;
	mov.b64 	%fd70, {%r30, %r22};
	setp.lt.s32 	%p7, %r22, 1073127583;
	@%p7 bra 	$L__BB4_7;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd70;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r24}, %fd70;
	}
	add.s32 	%r25, %r24, -1048576;
	mov.b64 	%fd70, {%r23, %r25};
	add.s32 	%r32, %r32, 1;

$L__BB4_7:
	add.f64 	%fd22, %fd70, 0d3FF0000000000000;
	mov.f64 	%fd23, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd24, %fd22;
	neg.f64 	%fd25, %fd22;
	fma.rn.f64 	%fd26, %fd25, %fd24, %fd23;
	fma.rn.f64 	%fd27, %fd26, %fd26, %fd26;
	fma.rn.f64 	%fd28, %fd27, %fd24, %fd24;
	add.f64 	%fd29, %fd70, 0dBFF0000000000000;
	mul.f64 	%fd30, %fd29, %fd28;
	fma.rn.f64 	%fd31, %fd29, %fd28, %fd30;
	mul.f64 	%fd32, %fd31, %fd31;
	mov.f64 	%fd33, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd34, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd35, %fd34, %fd32, %fd33;
	mov.f64 	%fd36, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd37, %fd35, %fd32, %fd36;
	mov.f64 	%fd38, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd39, %fd37, %fd32, %fd38;
	mov.f64 	%fd40, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd41, %fd39, %fd32, %fd40;
	mov.f64 	%fd42, 0d3F624924923BE72D;
	fma.rn.f64 	%fd43, %fd41, %fd32, %fd42;
	mov.f64 	%fd44, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd45, %fd43, %fd32, %fd44;
	mov.f64 	%fd46, 0d3FB5555555555554;
	fma.rn.f64 	%fd47, %fd45, %fd32, %fd46;
	sub.f64 	%fd48, %fd29, %fd31;
	add.f64 	%fd49, %fd48, %fd48;
	neg.f64 	%fd50, %fd31;
	fma.rn.f64 	%fd51, %fd50, %fd29, %fd49;
	mul.f64 	%fd52, %fd28, %fd51;
	mul.f64 	%fd53, %fd32, %fd47;
	fma.rn.f64 	%fd54, %fd53, %fd31, %fd52;
	xor.b32  	%r26, %r32, -2147483648;
	mov.u32 	%r27, -2147483648;
	mov.u32 	%r28, 1127219200;
	mov.b64 	%fd55, {%r26, %r28};
	mov.b64 	%fd56, {%r27, %r28};
	sub.f64 	%fd57, %fd55, %fd56;
	mov.f64 	%fd58, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd59, %fd57, %fd58, %fd31;
	neg.f64 	%fd60, %fd57;
	fma.rn.f64 	%fd61, %fd60, %fd58, %fd59;
	sub.f64 	%fd62, %fd61, %fd31;
	sub.f64 	%fd63, %fd54, %fd62;
	mov.f64 	%fd64, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd65, %fd57, %fd64, %fd63;
	add.f64 	%fd71, %fd59, %fd65;
	bra.uni 	$L__BB4_8;

$L__BB4_4:
	mov.f64 	%fd20, 0d7FF0000000000000;
	fma.rn.f64 	%fd21, %fd69, %fd20, %fd20;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r19}, %fd69;
	}
	mov.b32 	%f1, %r19;
	setp.eq.f32 	%p6, %f1, 0f00000000;
	selp.f64 	%fd71, 0dFFF0000000000000, %fd21, %p6;

$L__BB4_8:
	add.f64 	%fd66, %fd5, 0dBFF0000000000000;
	sub.f64 	%fd67, %fd66, %fd71;
	mul.f64 	%fd68, %fd67, 0d3FE0000000000000;
	shl.b64 	%rd17, %rd2, 3;
	add.s64 	%rd18, %rd1, %rd17;
	st.global.f64 	[%rd18], %fd68;

$L__BB4_9:
	ret;

}
	// .globl	accuracy_kernel
.visible .entry accuracy_kernel(
	.param .u64 accuracy_kernel_param_0,
	.param .u64 accuracy_kernel_param_1,
	.param .u64 accuracy_kernel_param_2,
	.param .u32 accuracy_kernel_param_3
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<33>;
	.reg .f64 	%fd<67>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [accuracy_kernel_param_0];
	ld.param.u64 	%rd3, [accuracy_kernel_param_1];
	ld.param.u64 	%rd4, [accuracy_kernel_param_2];
	ld.param.u32 	%r12, [accuracy_kernel_param_3];
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r14, %ntid.x;
	mov.u32 	%r15, %tid.x;
	mad.lo.s32 	%r1, %r13, %r14, %r15;
	setp.ge.s32 	%p1, %r1, %r12;
	@%p1 bra 	$L__BB5_9;

	cvta.to.global.u64 	%rd5, %rd2;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd6, %r1, 8;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f64 	%fd13, [%rd9];
	setp.lt.f64 	%p2, %fd13, 0d3DDB7CDFD9D7BDBB;
	selp.f64 	%fd1, 0d3DDB7CDFD9D7BDBB, %fd13, %p2;
	ld.global.f64 	%fd2, [%rd7];
	mov.f64 	%fd14, 0d401921FB54442D18;
	div.rn.f64 	%fd64, %fd14, %fd1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r29}, %fd64;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r30, %temp}, %fd64;
	}
	setp.gt.s32 	%p3, %r29, 1048575;
	mov.u32 	%r31, -1023;
	@%p3 bra 	$L__BB5_3;

	mul.f64 	%fd64, %fd64, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r29}, %fd64;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r30, %temp}, %fd64;
	}
	mov.u32 	%r31, -1077;

$L__BB5_3:
	add.s32 	%r18, %r29, -1;
	setp.lt.u32 	%p4, %r18, 2146435071;
	mul.f64 	%fd15, %fd2, %fd1;
	mul.f64 	%fd6, %fd2, %fd15;
	@%p4 bra 	$L__BB5_5;
	bra.uni 	$L__BB5_4;

$L__BB5_5:
	shr.u32 	%r20, %r29, 20;
	add.s32 	%r32, %r31, %r20;
	and.b32  	%r21, %r29, -2146435073;
	or.b32  	%r22, %r21, 1072693248;
	mov.b64 	%fd65, {%r30, %r22};
	setp.lt.s32 	%p6, %r22, 1073127583;
	@%p6 bra 	$L__BB5_7;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd65;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r24}, %fd65;
	}
	add.s32 	%r25, %r24, -1048576;
	mov.b64 	%fd65, {%r23, %r25};
	add.s32 	%r32, %r32, 1;

$L__BB5_7:
	add.f64 	%fd18, %fd65, 0d3FF0000000000000;
	mov.f64 	%fd19, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd20, %fd18;
	neg.f64 	%fd21, %fd18;
	fma.rn.f64 	%fd22, %fd21, %fd20, %fd19;
	fma.rn.f64 	%fd23, %fd22, %fd22, %fd22;
	fma.rn.f64 	%fd24, %fd23, %fd20, %fd20;
	add.f64 	%fd25, %fd65, 0dBFF0000000000000;
	mul.f64 	%fd26, %fd25, %fd24;
	fma.rn.f64 	%fd27, %fd25, %fd24, %fd26;
	mul.f64 	%fd28, %fd27, %fd27;
	mov.f64 	%fd29, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd30, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd31, %fd30, %fd28, %fd29;
	mov.f64 	%fd32, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd33, %fd31, %fd28, %fd32;
	mov.f64 	%fd34, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd35, %fd33, %fd28, %fd34;
	mov.f64 	%fd36, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd37, %fd35, %fd28, %fd36;
	mov.f64 	%fd38, 0d3F624924923BE72D;
	fma.rn.f64 	%fd39, %fd37, %fd28, %fd38;
	mov.f64 	%fd40, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd41, %fd39, %fd28, %fd40;
	mov.f64 	%fd42, 0d3FB5555555555554;
	fma.rn.f64 	%fd43, %fd41, %fd28, %fd42;
	sub.f64 	%fd44, %fd25, %fd27;
	add.f64 	%fd45, %fd44, %fd44;
	neg.f64 	%fd46, %fd27;
	fma.rn.f64 	%fd47, %fd46, %fd25, %fd45;
	mul.f64 	%fd48, %fd24, %fd47;
	mul.f64 	%fd49, %fd28, %fd43;
	fma.rn.f64 	%fd50, %fd49, %fd27, %fd48;
	xor.b32  	%r26, %r32, -2147483648;
	mov.u32 	%r27, -2147483648;
	mov.u32 	%r28, 1127219200;
	mov.b64 	%fd51, {%r26, %r28};
	mov.b64 	%fd52, {%r27, %r28};
	sub.f64 	%fd53, %fd51, %fd52;
	mov.f64 	%fd54, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd55, %fd53, %fd54, %fd27;
	neg.f64 	%fd56, %fd53;
	fma.rn.f64 	%fd57, %fd56, %fd54, %fd55;
	sub.f64 	%fd58, %fd57, %fd27;
	sub.f64 	%fd59, %fd50, %fd58;
	mov.f64 	%fd60, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd61, %fd53, %fd60, %fd59;
	add.f64 	%fd66, %fd55, %fd61;
	bra.uni 	$L__BB5_8;

$L__BB5_4:
	mov.f64 	%fd16, 0d7FF0000000000000;
	fma.rn.f64 	%fd17, %fd64, %fd16, %fd16;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r19}, %fd64;
	}
	mov.b32 	%f1, %r19;
	setp.eq.f32 	%p5, %f1, 0f00000000;
	selp.f64 	%fd66, 0dFFF0000000000000, %fd17, %p5;

$L__BB5_8:
	add.f64 	%fd62, %fd6, %fd66;
	mul.f64 	%fd63, %fd62, 0dBFE0000000000000;
	cvta.to.global.u64 	%rd10, %rd4;
	shl.b64 	%rd11, %rd1, 3;
	add.s64 	%rd12, %rd10, %rd11;
	st.global.f64 	[%rd12], %fd63;

$L__BB5_9:
	ret;

}
	// .globl	sum_reduction_kernel
.visible .entry sum_reduction_kernel(
	.param .u64 sum_reduction_kernel_param_0,
	.param .u64 sum_reduction_kernel_param_1,
	.param .u32 sum_reduction_kernel_param_2
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<15>;
	.reg .f64 	%fd<10>;
	.reg .b64 	%rd<7>;
	// demoted variable
	.shared .align 8 .b8 _ZZ20sum_reduction_kernelE6shared[2048];

	ld.param.u64 	%rd1, [sum_reduction_kernel_param_0];
	ld.param.u64 	%rd2, [sum_reduction_kernel_param_1];
	ld.param.u32 	%r8, [sum_reduction_kernel_param_2];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r2, %tid.x;
	mad.lo.s32 	%r3, %r9, %r1, %r2;
	setp.ge.s32 	%p1, %r3, %r8;
	mov.f64 	%fd9, 0d0000000000000000;
	@%p1 bra 	$L__BB6_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r3, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd9, [%rd5];

$L__BB6_2:
	shl.b32 	%r10, %r2, 3;
	mov.u32 	%r11, _ZZ20sum_reduction_kernelE6shared;
	add.s32 	%r4, %r11, %r10;
	st.shared.f64 	[%r4], %fd9;
	bar.sync 	0;
	shr.u32 	%r14, %r1, 1;
	setp.eq.s32 	%p2, %r14, 0;
	@%p2 bra 	$L__BB6_6;

$L__BB6_3:
	setp.ge.s32 	%p3, %r2, %r14;
	@%p3 bra 	$L__BB6_5;

	shl.b32 	%r12, %r14, 3;
	add.s32 	%r13, %r4, %r12;
	ld.shared.f64 	%fd4, [%r4];
	ld.shared.f64 	%fd5, [%r13];
	add.f64 	%fd6, %fd5, %fd4;
	st.shared.f64 	[%r4], %fd6;

$L__BB6_5:
	bar.sync 	0;
	shr.u32 	%r14, %r14, 1;
	setp.ne.s32 	%p4, %r14, 0;
	@%p4 bra 	$L__BB6_3;

$L__BB6_6:
	setp.ne.s32 	%p5, %r2, 0;
	@%p5 bra 	$L__BB6_8;

	ld.shared.f64 	%fd7, [_ZZ20sum_reduction_kernelE6shared];
	cvta.to.global.u64 	%rd6, %rd2;
	atom.global.add.f64 	%fd8, [%rd6], %fd7;

$L__BB6_8:
	ret;

}
	// .globl	axpby_kernel
.visible .entry axpby_kernel(
	.param .u64 axpby_kernel_param_0,
	.param .u64 axpby_kernel_param_1,
	.param .u64 axpby_kernel_param_2,
	.param .f64 axpby_kernel_param_3,
	.param .f64 axpby_kernel_param_4,
	.param .u32 axpby_kernel_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<7>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [axpby_kernel_param_0];
	ld.param.u64 	%rd2, [axpby_kernel_param_1];
	ld.param.u64 	%rd3, [axpby_kernel_param_2];
	ld.param.f64 	%fd1, [axpby_kernel_param_3];
	ld.param.f64 	%fd2, [axpby_kernel_param_4];
	ld.param.u32 	%r2, [axpby_kernel_param_5];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB7_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f64 	%fd3, [%rd6];
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f64 	%fd4, [%rd8];
	mul.f64 	%fd5, %fd4, %fd2;
	fma.rn.f64 	%fd6, %fd3, %fd1, %fd5;
	cvta.to.global.u64 	%rd9, %rd1;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f64 	[%rd10], %fd6;

$L__BB7_2:
	ret;

}
	// .globl	velocity_update_kernel
.visible .entry velocity_update_kernel(
	.param .u64 velocity_update_kernel_param_0,
	.param .u64 velocity_update_kernel_param_1,
	.param .u64 velocity_update_kernel_param_2,
	.param .f64 velocity_update_kernel_param_3,
	.param .u32 velocity_update_kernel_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [velocity_update_kernel_param_0];
	ld.param.u64 	%rd2, [velocity_update_kernel_param_1];
	ld.param.u64 	%rd3, [velocity_update_kernel_param_2];
	ld.param.f64 	%fd1, [velocity_update_kernel_param_3];
	ld.param.u32 	%r2, [velocity_update_kernel_param_4];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB8_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f64 	%fd2, [%rd8];
	ld.global.f64 	%fd3, [%rd6];
	sub.f64 	%fd4, %fd3, %fd2;
	div.rn.f64 	%fd5, %fd4, %fd1;
	cvta.to.global.u64 	%rd9, %rd1;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f64 	[%rd10], %fd5;

$L__BB8_2:
	ret;

}
	// .globl	hierarchical_project_kernel
.visible .entry hierarchical_project_kernel(
	.param .u64 hierarchical_project_kernel_param_0,
	.param .u64 hierarchical_project_kernel_param_1,
	.param .u32 hierarchical_project_kernel_param_2,
	.param .u32 hierarchical_project_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<8>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [hierarchical_project_kernel_param_0];
	ld.param.u64 	%rd2, [hierarchical_project_kernel_param_1];
	ld.param.u32 	%r3, [hierarchical_project_kernel_param_2];
	ld.param.u32 	%r2, [hierarchical_project_kernel_param_3];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r6;
	setp.ge.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB9_2;

	cvta.to.global.u64 	%rd3, %rd2;
	rem.s32 	%r7, %r1, %r2;
	mul.wide.s32 	%rd4, %r7, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	mul.wide.s32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f64 	[%rd8], %fd1;

$L__BB9_2:
	ret;

}

