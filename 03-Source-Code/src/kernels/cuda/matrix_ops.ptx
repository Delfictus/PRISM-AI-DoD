//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-35583870
// Cuda compilation tools, release 12.8, V12.8.93
// Based on NVVM 7.0.1
//

.version 8.7
.target sm_89
.address_size 64

	// .globl	matmul_kernel
// _ZZ13matmul_kernelE5tileA has been demoted
// _ZZ13matmul_kernelE5tileB has been demoted
// _ZZ14softmax_kernelE10shared_max has been demoted
// _ZZ14softmax_kernelE10shared_sum has been demoted

.visible .entry matmul_kernel(
	.param .u64 matmul_kernel_param_0,
	.param .u64 matmul_kernel_param_1,
	.param .u64 matmul_kernel_param_2,
	.param .u32 matmul_kernel_param_3,
	.param .u32 matmul_kernel_param_4,
	.param .u32 matmul_kernel_param_5
)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<63>;
	.reg .b32 	%r<44>;
	.reg .b64 	%rd<16>;
	// demoted variable
	.shared .align 4 .b8 _ZZ13matmul_kernelE5tileA[1024];
	// demoted variable
	.shared .align 4 .b8 _ZZ13matmul_kernelE5tileB[1024];

	ld.param.u64 	%rd4, [matmul_kernel_param_0];
	ld.param.u64 	%rd5, [matmul_kernel_param_1];
	ld.param.u64 	%rd6, [matmul_kernel_param_2];
	ld.param.u32 	%r20, [matmul_kernel_param_3];
	ld.param.u32 	%r21, [matmul_kernel_param_4];
	ld.param.u32 	%r22, [matmul_kernel_param_5];
	mov.u32 	%r23, %ctaid.y;
	shl.b32 	%r24, %r23, 4;
	mov.u32 	%r41, %tid.y;
	add.s32 	%r2, %r24, %r41;
	mov.u32 	%r25, %ctaid.x;
	shl.b32 	%r3, %r25, 4;
	mov.u32 	%r40, %tid.x;
	add.s32 	%r5, %r3, %r40;
	setp.lt.s32 	%p1, %r21, 1;
	mov.f32 	%f62, 0f00000000;
	@%p1 bra 	$L__BB0_7;

	shl.b32 	%r27, %r41, 6;
	mov.u32 	%r28, _ZZ13matmul_kernelE5tileA;
	add.s32 	%r8, %r28, %r27;
	shl.b32 	%r29, %r40, 2;
	add.s32 	%r6, %r8, %r29;
	mov.u32 	%r30, _ZZ13matmul_kernelE5tileB;
	add.s32 	%r31, %r30, %r27;
	add.s32 	%r7, %r31, %r29;
	add.s32 	%r9, %r30, %r29;
	mad.lo.s32 	%r32, %r41, %r22, %r40;
	add.s32 	%r42, %r32, %r3;
	mad.lo.s32 	%r33, %r21, %r2, %r40;
	cvta.to.global.u64 	%rd7, %rd4;
	mul.wide.s32 	%rd8, %r33, 4;
	add.s64 	%rd15, %rd7, %rd8;
	add.s32 	%r34, %r21, 15;
	shr.s32 	%r35, %r34, 31;
	shr.u32 	%r36, %r35, 28;
	add.s32 	%r37, %r34, %r36;
	shr.s32 	%r11, %r37, 4;
	mov.f32 	%f9, 0f00000000;
	mov.u32 	%r43, 0;
	cvta.to.global.u64 	%rd9, %rd5;
	mov.f32 	%f62, %f9;

$L__BB0_2:
	setp.ge.s32 	%p2, %r40, %r21;
	setp.ge.s32 	%p3, %r2, %r20;
	or.pred  	%p4, %p3, %p2;
	mov.f32 	%f60, %f9;
	@%p4 bra 	$L__BB0_4;

	ld.global.nc.f32 	%f60, [%rd15];

$L__BB0_4:
	st.shared.f32 	[%r6], %f60;
	setp.ge.s32 	%p5, %r41, %r21;
	setp.ge.s32 	%p6, %r5, %r22;
	mov.f32 	%f61, 0f00000000;
	or.pred  	%p7, %p6, %p5;
	@%p7 bra 	$L__BB0_6;

	mul.wide.s32 	%rd10, %r42, 4;
	add.s64 	%rd11, %rd9, %rd10;
	ld.global.nc.f32 	%f61, [%rd11];

$L__BB0_6:
	st.shared.f32 	[%r7], %f61;
	bar.sync 	0;
	ld.shared.f32 	%f12, [%r9];
	ld.shared.f32 	%f13, [%r8];
	fma.rn.ftz.f32 	%f14, %f13, %f12, %f62;
	ld.shared.f32 	%f15, [%r9+64];
	ld.shared.f32 	%f16, [%r8+4];
	fma.rn.ftz.f32 	%f17, %f16, %f15, %f14;
	ld.shared.f32 	%f18, [%r9+128];
	ld.shared.f32 	%f19, [%r8+8];
	fma.rn.ftz.f32 	%f20, %f19, %f18, %f17;
	ld.shared.f32 	%f21, [%r9+192];
	ld.shared.f32 	%f22, [%r8+12];
	fma.rn.ftz.f32 	%f23, %f22, %f21, %f20;
	ld.shared.f32 	%f24, [%r9+256];
	ld.shared.f32 	%f25, [%r8+16];
	fma.rn.ftz.f32 	%f26, %f25, %f24, %f23;
	ld.shared.f32 	%f27, [%r9+320];
	ld.shared.f32 	%f28, [%r8+20];
	fma.rn.ftz.f32 	%f29, %f28, %f27, %f26;
	ld.shared.f32 	%f30, [%r9+384];
	ld.shared.f32 	%f31, [%r8+24];
	fma.rn.ftz.f32 	%f32, %f31, %f30, %f29;
	ld.shared.f32 	%f33, [%r9+448];
	ld.shared.f32 	%f34, [%r8+28];
	fma.rn.ftz.f32 	%f35, %f34, %f33, %f32;
	ld.shared.f32 	%f36, [%r9+512];
	ld.shared.f32 	%f37, [%r8+32];
	fma.rn.ftz.f32 	%f38, %f37, %f36, %f35;
	ld.shared.f32 	%f39, [%r9+576];
	ld.shared.f32 	%f40, [%r8+36];
	fma.rn.ftz.f32 	%f41, %f40, %f39, %f38;
	ld.shared.f32 	%f42, [%r9+640];
	ld.shared.f32 	%f43, [%r8+40];
	fma.rn.ftz.f32 	%f44, %f43, %f42, %f41;
	ld.shared.f32 	%f45, [%r9+704];
	ld.shared.f32 	%f46, [%r8+44];
	fma.rn.ftz.f32 	%f47, %f46, %f45, %f44;
	ld.shared.f32 	%f48, [%r9+768];
	ld.shared.f32 	%f49, [%r8+48];
	fma.rn.ftz.f32 	%f50, %f49, %f48, %f47;
	ld.shared.f32 	%f51, [%r9+832];
	ld.shared.f32 	%f52, [%r8+52];
	fma.rn.ftz.f32 	%f53, %f52, %f51, %f50;
	ld.shared.f32 	%f54, [%r9+896];
	ld.shared.f32 	%f55, [%r8+56];
	fma.rn.ftz.f32 	%f56, %f55, %f54, %f53;
	ld.shared.f32 	%f57, [%r9+960];
	ld.shared.f32 	%f58, [%r8+60];
	fma.rn.ftz.f32 	%f62, %f58, %f57, %f56;
	bar.sync 	0;
	shl.b32 	%r38, %r22, 4;
	add.s32 	%r42, %r42, %r38;
	add.s32 	%r41, %r41, 16;
	add.s64 	%rd15, %rd15, 64;
	add.s32 	%r40, %r40, 16;
	add.s32 	%r43, %r43, 1;
	setp.lt.s32 	%p8, %r43, %r11;
	@%p8 bra 	$L__BB0_2;

$L__BB0_7:
	setp.ge.s32 	%p9, %r5, %r22;
	setp.ge.s32 	%p10, %r2, %r20;
	or.pred  	%p11, %p10, %p9;
	@%p11 bra 	$L__BB0_9;

	mad.lo.s32 	%r39, %r2, %r22, %r5;
	cvta.to.global.u64 	%rd12, %rd6;
	mul.wide.s32 	%rd13, %r39, 4;
	add.s64 	%rd14, %rd12, %rd13;
	st.global.f32 	[%rd14], %f62;

$L__BB0_9:
	ret;

}
	// .globl	add_bias_kernel
.visible .entry add_bias_kernel(
	.param .u64 add_bias_kernel_param_0,
	.param .u64 add_bias_kernel_param_1,
	.param .u32 add_bias_kernel_param_2,
	.param .u32 add_bias_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [add_bias_kernel_param_0];
	ld.param.u64 	%rd2, [add_bias_kernel_param_1];
	ld.param.u32 	%r3, [add_bias_kernel_param_2];
	ld.param.u32 	%r2, [add_bias_kernel_param_3];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r6;
	mul.lo.s32 	%r7, %r2, %r3;
	setp.ge.s32 	%p1, %r1, %r7;
	@%p1 bra 	$L__BB1_2;

	cvta.to.global.u64 	%rd3, %rd2;
	rem.s32 	%r8, %r1, %r2;
	mul.wide.s32 	%rd4, %r8, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd1;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f1, [%rd8];
	ld.global.nc.f32 	%f2, [%rd5];
	add.ftz.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd8], %f3;

$L__BB1_2:
	ret;

}
	// .globl	relu_kernel
.visible .entry relu_kernel(
	.param .u64 relu_kernel_param_0,
	.param .u32 relu_kernel_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [relu_kernel_param_0];
	ld.param.u32 	%r2, [relu_kernel_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB2_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mov.f32 	%f2, 0f00000000;
	max.ftz.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd4], %f3;

$L__BB2_2:
	ret;

}
	// .globl	softmax_kernel
.visible .entry softmax_kernel(
	.param .u64 softmax_kernel_param_0,
	.param .u64 softmax_kernel_param_1,
	.param .u32 softmax_kernel_param_2,
	.param .u32 softmax_kernel_param_3
)
{
	.reg .pred 	%p<21>;
	.reg .f32 	%f<76>;
	.reg .b32 	%r<59>;
	.reg .b64 	%rd<43>;
	// demoted variable
	.shared .align 4 .f32 _ZZ14softmax_kernelE10shared_max;
	// demoted variable
	.shared .align 4 .f32 _ZZ14softmax_kernelE10shared_sum;

	ld.param.u64 	%rd26, [softmax_kernel_param_0];
	ld.param.u64 	%rd27, [softmax_kernel_param_1];
	ld.param.u32 	%r31, [softmax_kernel_param_2];
	ld.param.u32 	%r30, [softmax_kernel_param_3];
	cvta.to.global.u64 	%rd1, %rd26;
	cvta.to.global.u64 	%rd2, %rd27;
	mov.u32 	%r1, %ctaid.x;
	setp.ge.s32 	%p1, %r1, %r31;
	@%p1 bra 	$L__BB3_26;

	mov.u32 	%r2, %tid.x;
	setp.ne.s32 	%p2, %r2, 0;
	@%p2 bra 	$L__BB3_10;

	setp.lt.s32 	%p3, %r30, 1;
	mov.f32 	%f70, 0fFF800000;
	@%p3 bra 	$L__BB3_9;

	add.s32 	%r33, %r30, -1;
	and.b32  	%r50, %r30, 3;
	setp.lt.u32 	%p4, %r33, 3;
	mov.f32 	%f70, 0fFF800000;
	mov.u32 	%r49, 0;
	@%p4 bra 	$L__BB3_6;

	sub.s32 	%r48, %r30, %r50;
	mul.lo.s32 	%r35, %r1, %r30;
	mul.wide.s32 	%rd28, %r35, 4;
	add.s64 	%rd35, %rd1, %rd28;
	mov.f32 	%f70, 0fFF800000;
	mov.u32 	%r49, 0;

$L__BB3_5:
	ld.global.nc.f32 	%f21, [%rd35];
	max.ftz.f32 	%f22, %f70, %f21;
	ld.global.nc.f32 	%f23, [%rd35+4];
	max.ftz.f32 	%f24, %f22, %f23;
	ld.global.nc.f32 	%f25, [%rd35+8];
	max.ftz.f32 	%f26, %f24, %f25;
	ld.global.nc.f32 	%f27, [%rd35+12];
	max.ftz.f32 	%f70, %f26, %f27;
	add.s32 	%r49, %r49, 4;
	add.s64 	%rd35, %rd35, 16;
	add.s32 	%r48, %r48, -4;
	setp.ne.s32 	%p5, %r48, 0;
	@%p5 bra 	$L__BB3_5;

$L__BB3_6:
	setp.eq.s32 	%p6, %r50, 0;
	@%p6 bra 	$L__BB3_9;

	mad.lo.s32 	%r36, %r1, %r30, %r49;
	mul.wide.s32 	%rd29, %r36, 4;
	add.s64 	%rd36, %rd1, %rd29;

$L__BB3_8:
	.pragma "nounroll";
	ld.global.nc.f32 	%f28, [%rd36];
	max.ftz.f32 	%f70, %f70, %f28;
	add.s64 	%rd36, %rd36, 4;
	add.s32 	%r50, %r50, -1;
	setp.ne.s32 	%p7, %r50, 0;
	@%p7 bra 	$L__BB3_8;

$L__BB3_9:
	st.shared.f32 	[_ZZ14softmax_kernelE10shared_max], %f70;

$L__BB3_10:
	bar.sync 	0;
	ld.shared.f32 	%f8, [_ZZ14softmax_kernelE10shared_max];
	@%p2 bra 	$L__BB3_19;

	setp.lt.s32 	%p9, %r30, 1;
	mov.f32 	%f75, 0f00000000;
	@%p9 bra 	$L__BB3_18;

	add.s32 	%r38, %r30, -1;
	and.b32  	%r54, %r30, 3;
	setp.lt.u32 	%p10, %r38, 3;
	mov.f32 	%f75, 0f00000000;
	mov.u32 	%r53, 0;
	@%p10 bra 	$L__BB3_15;

	sub.s32 	%r52, %r30, %r54;
	mul.lo.s32 	%r40, %r1, %r30;
	mul.wide.s32 	%rd9, %r40, 4;
	mov.f32 	%f75, 0f00000000;
	mov.u32 	%r53, 0;
	mov.u64 	%rd37, %rd1;
	mov.u64 	%rd38, %rd2;

$L__BB3_14:
	add.s64 	%rd30, %rd37, %rd9;
	ld.global.nc.f32 	%f33, [%rd30];
	sub.ftz.f32 	%f34, %f33, %f8;
	mul.ftz.f32 	%f35, %f34, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f36, %f35;
	add.s64 	%rd31, %rd38, %rd9;
	st.global.f32 	[%rd31], %f36;
	add.ftz.f32 	%f37, %f75, %f36;
	ld.global.nc.f32 	%f38, [%rd30+4];
	sub.ftz.f32 	%f39, %f38, %f8;
	mul.ftz.f32 	%f40, %f39, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f41, %f40;
	st.global.f32 	[%rd31+4], %f41;
	add.ftz.f32 	%f42, %f37, %f41;
	ld.global.nc.f32 	%f43, [%rd30+8];
	sub.ftz.f32 	%f44, %f43, %f8;
	mul.ftz.f32 	%f45, %f44, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f46, %f45;
	st.global.f32 	[%rd31+8], %f46;
	add.ftz.f32 	%f47, %f42, %f46;
	ld.global.nc.f32 	%f48, [%rd30+12];
	sub.ftz.f32 	%f49, %f48, %f8;
	mul.ftz.f32 	%f50, %f49, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f51, %f50;
	st.global.f32 	[%rd31+12], %f51;
	add.ftz.f32 	%f75, %f47, %f51;
	add.s32 	%r53, %r53, 4;
	add.s64 	%rd38, %rd38, 16;
	add.s64 	%rd37, %rd37, 16;
	add.s32 	%r52, %r52, -4;
	setp.ne.s32 	%p11, %r52, 0;
	@%p11 bra 	$L__BB3_14;

$L__BB3_15:
	setp.eq.s32 	%p12, %r54, 0;
	@%p12 bra 	$L__BB3_18;

	mad.lo.s32 	%r41, %r1, %r30, %r53;
	mul.wide.s32 	%rd32, %r41, 4;
	add.s64 	%rd40, %rd2, %rd32;
	add.s64 	%rd39, %rd1, %rd32;

$L__BB3_17:
	.pragma "nounroll";
	ld.global.nc.f32 	%f52, [%rd39];
	sub.ftz.f32 	%f53, %f52, %f8;
	mul.ftz.f32 	%f54, %f53, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f55, %f54;
	st.global.f32 	[%rd40], %f55;
	add.ftz.f32 	%f75, %f75, %f55;
	add.s64 	%rd40, %rd40, 4;
	add.s64 	%rd39, %rd39, 4;
	add.s32 	%r54, %r54, -1;
	setp.ne.s32 	%p13, %r54, 0;
	@%p13 bra 	$L__BB3_17;

$L__BB3_18:
	st.shared.f32 	[_ZZ14softmax_kernelE10shared_sum], %f75;

$L__BB3_19:
	bar.sync 	0;
	ld.shared.f32 	%f16, [_ZZ14softmax_kernelE10shared_sum];
	setp.lt.s32 	%p15, %r30, 1;
	or.pred  	%p16, %p2, %p15;
	@%p16 bra 	$L__BB3_26;

	add.s32 	%r43, %r30, -1;
	and.b32  	%r58, %r30, 3;
	setp.lt.u32 	%p17, %r43, 3;
	mov.u32 	%r57, 0;
	@%p17 bra 	$L__BB3_23;

	sub.s32 	%r56, %r30, %r58;
	mul.lo.s32 	%r45, %r1, %r30;
	mul.wide.s32 	%rd33, %r45, 4;
	add.s64 	%rd41, %rd2, %rd33;
	mov.u32 	%r57, 0;

$L__BB3_22:
	ld.global.f32 	%f56, [%rd41];
	div.approx.ftz.f32 	%f57, %f56, %f16;
	st.global.f32 	[%rd41], %f57;
	ld.global.f32 	%f58, [%rd41+4];
	div.approx.ftz.f32 	%f59, %f58, %f16;
	st.global.f32 	[%rd41+4], %f59;
	ld.global.f32 	%f60, [%rd41+8];
	div.approx.ftz.f32 	%f61, %f60, %f16;
	st.global.f32 	[%rd41+8], %f61;
	ld.global.f32 	%f62, [%rd41+12];
	div.approx.ftz.f32 	%f63, %f62, %f16;
	st.global.f32 	[%rd41+12], %f63;
	add.s32 	%r57, %r57, 4;
	add.s64 	%rd41, %rd41, 16;
	add.s32 	%r56, %r56, -4;
	setp.ne.s32 	%p18, %r56, 0;
	@%p18 bra 	$L__BB3_22;

$L__BB3_23:
	setp.eq.s32 	%p19, %r58, 0;
	@%p19 bra 	$L__BB3_26;

	mad.lo.s32 	%r46, %r1, %r30, %r57;
	mul.wide.s32 	%rd34, %r46, 4;
	add.s64 	%rd42, %rd2, %rd34;

$L__BB3_25:
	.pragma "nounroll";
	ld.global.f32 	%f64, [%rd42];
	div.approx.ftz.f32 	%f65, %f64, %f16;
	st.global.f32 	[%rd42], %f65;
	add.s64 	%rd42, %rd42, 4;
	add.s32 	%r58, %r58, -1;
	setp.ne.s32 	%p20, %r58, 0;
	@%p20 bra 	$L__BB3_25;

$L__BB3_26:
	ret;

}
	// .globl	cross_entropy_grad_kernel
.visible .entry cross_entropy_grad_kernel(
	.param .u64 cross_entropy_grad_kernel_param_0,
	.param .u64 cross_entropy_grad_kernel_param_1,
	.param .u64 cross_entropy_grad_kernel_param_2,
	.param .u32 cross_entropy_grad_kernel_param_3,
	.param .u32 cross_entropy_grad_kernel_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd2, [cross_entropy_grad_kernel_param_0];
	ld.param.u64 	%rd3, [cross_entropy_grad_kernel_param_1];
	ld.param.u64 	%rd4, [cross_entropy_grad_kernel_param_2];
	ld.param.u32 	%r3, [cross_entropy_grad_kernel_param_3];
	ld.param.u32 	%r2, [cross_entropy_grad_kernel_param_4];
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r5, %r4, %r6;
	mul.lo.s32 	%r7, %r2, %r3;
	setp.ge.s32 	%p1, %r1, %r7;
	@%p1 bra 	$L__BB4_4;

	cvta.to.global.u64 	%rd5, %rd3;
	div.s32 	%r8, %r1, %r2;
	mul.wide.s32 	%rd6, %r8, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.nc.u32 	%r9, [%rd7];
	mul.lo.s32 	%r10, %r8, %r2;
	sub.s32 	%r11, %r1, %r10;
	setp.eq.s32 	%p2, %r11, %r9;
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.s32 	%rd9, %r1, 4;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.nc.f32 	%f1, [%rd10];
	cvta.to.global.u64 	%rd11, %rd4;
	add.s64 	%rd1, %rd11, %rd9;
	@%p2 bra 	$L__BB4_3;
	bra.uni 	$L__BB4_2;

$L__BB4_3:
	add.ftz.f32 	%f2, %f1, 0fBF800000;
	st.global.f32 	[%rd1], %f2;
	bra.uni 	$L__BB4_4;

$L__BB4_2:
	st.global.f32 	[%rd1], %f1;

$L__BB4_4:
	ret;

}
	// .globl	sigmoid_kernel
.visible .entry sigmoid_kernel(
	.param .u64 sigmoid_kernel_param_0,
	.param .u32 sigmoid_kernel_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [sigmoid_kernel_param_0];
	ld.param.u32 	%r2, [sigmoid_kernel_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB5_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mul.ftz.f32 	%f2, %f1, 0fBFB8AA3B;
	ex2.approx.ftz.f32 	%f3, %f2;
	add.ftz.f32 	%f4, %f3, 0f3F800000;
	rcp.approx.ftz.f32 	%f5, %f4;
	st.global.f32 	[%rd4], %f5;

$L__BB5_2:
	ret;

}
	// .globl	tanh_kernel
.visible .entry tanh_kernel(
	.param .u64 tanh_kernel_param_0,
	.param .u32 tanh_kernel_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [tanh_kernel_param_0];
	ld.param.u32 	%r2, [tanh_kernel_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB6_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	tanh.approx.f32 	%f2, %f1;
	st.global.f32 	[%rd4], %f2;

$L__BB6_2:
	ret;

}
	// .globl	saxpy_kernel
.visible .entry saxpy_kernel(
	.param .u64 saxpy_kernel_param_0,
	.param .u64 saxpy_kernel_param_1,
	.param .f32 saxpy_kernel_param_2,
	.param .u32 saxpy_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [saxpy_kernel_param_0];
	ld.param.u64 	%rd2, [saxpy_kernel_param_1];
	ld.param.f32 	%f1, [saxpy_kernel_param_2];
	ld.param.u32 	%r2, [saxpy_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB7_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f2, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f32 	%f3, [%rd7];
	fma.rn.ftz.f32 	%f4, %f2, %f1, %f3;
	st.global.f32 	[%rd7], %f4;

$L__BB7_2:
	ret;

}

