//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-35583870
// Cuda compilation tools, release 12.8, V12.8.93
// Based on NVVM 7.0.1
//

.version 8.7
.target sm_70
.address_size 64

	// .globl	matvec_input_kernel

.visible .entry matvec_input_kernel(
	.param .u64 matvec_input_kernel_param_0,
	.param .u64 matvec_input_kernel_param_1,
	.param .u64 matvec_input_kernel_param_2,
	.param .f32 matvec_input_kernel_param_3,
	.param .f32 matvec_input_kernel_param_4,
	.param .u32 matvec_input_kernel_param_5,
	.param .u32 matvec_input_kernel_param_6
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<35>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<27>;


	ld.param.u64 	%rd16, [matvec_input_kernel_param_0];
	ld.param.u64 	%rd17, [matvec_input_kernel_param_1];
	ld.param.u64 	%rd15, [matvec_input_kernel_param_2];
	ld.param.f32 	%f9, [matvec_input_kernel_param_3];
	ld.param.f32 	%f10, [matvec_input_kernel_param_4];
	ld.param.u32 	%r12, [matvec_input_kernel_param_5];
	ld.param.u32 	%r11, [matvec_input_kernel_param_6];
	cvta.to.global.u64 	%rd1, %rd17;
	cvta.to.global.u64 	%rd2, %rd16;
	mov.u32 	%r13, %ntid.x;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %tid.x;
	mad.lo.s32 	%r1, %r14, %r13, %r15;
	setp.ge.s32 	%p1, %r1, %r12;
	@%p1 bra 	$L__BB0_11;

	setp.lt.s32 	%p2, %r11, 1;
	mov.f32 	%f34, 0f00000000;
	@%p2 bra 	$L__BB0_8;

	add.s32 	%r17, %r11, -1;
	and.b32  	%r24, %r11, 3;
	setp.lt.u32 	%p3, %r17, 3;
	mov.f32 	%f34, 0f00000000;
	mov.u32 	%r23, 0;
	@%p3 bra 	$L__BB0_5;

	sub.s32 	%r22, %r11, %r24;
	mul.lo.s32 	%r19, %r11, %r1;
	mul.wide.s32 	%rd18, %r19, 4;
	add.s64 	%rd24, %rd2, %rd18;
	mov.f32 	%f34, 0f00000000;
	mov.u32 	%r23, 0;
	mov.u64 	%rd23, %rd1;

$L__BB0_4:
	ld.global.nc.f32 	%f15, [%rd23];
	ld.global.nc.f32 	%f16, [%rd24];
	fma.rn.f32 	%f17, %f16, %f15, %f34;
	ld.global.nc.f32 	%f18, [%rd23+4];
	ld.global.nc.f32 	%f19, [%rd24+4];
	fma.rn.f32 	%f20, %f19, %f18, %f17;
	ld.global.nc.f32 	%f21, [%rd23+8];
	ld.global.nc.f32 	%f22, [%rd24+8];
	fma.rn.f32 	%f23, %f22, %f21, %f20;
	ld.global.nc.f32 	%f24, [%rd23+12];
	ld.global.nc.f32 	%f25, [%rd24+12];
	fma.rn.f32 	%f34, %f25, %f24, %f23;
	add.s32 	%r23, %r23, 4;
	add.s64 	%rd24, %rd24, 16;
	add.s64 	%rd23, %rd23, 16;
	add.s32 	%r22, %r22, -4;
	setp.ne.s32 	%p4, %r22, 0;
	@%p4 bra 	$L__BB0_4;

$L__BB0_5:
	setp.eq.s32 	%p5, %r24, 0;
	@%p5 bra 	$L__BB0_8;

	mul.wide.s32 	%rd19, %r23, 4;
	add.s64 	%rd26, %rd1, %rd19;
	mad.lo.s32 	%r20, %r11, %r1, %r23;
	mul.wide.s32 	%rd20, %r20, 4;
	add.s64 	%rd25, %rd2, %rd20;

$L__BB0_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f26, [%rd26];
	ld.global.nc.f32 	%f27, [%rd25];
	fma.rn.f32 	%f34, %f27, %f26, %f34;
	add.s64 	%rd26, %rd26, 4;
	add.s64 	%rd25, %rd25, 4;
	add.s32 	%r24, %r24, -1;
	setp.ne.s32 	%p6, %r24, 0;
	@%p6 bra 	$L__BB0_7;

$L__BB0_8:
	mul.f32 	%f8, %f34, %f9;
	cvta.to.global.u64 	%rd21, %rd15;
	mul.wide.s32 	%rd22, %r1, 4;
	add.s64 	%rd14, %rd21, %rd22;
	setp.eq.f32 	%p7, %f10, 0f00000000;
	@%p7 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;

$L__BB0_10:
	st.global.f32 	[%rd14], %f8;
	bra.uni 	$L__BB0_11;

$L__BB0_9:
	ld.global.f32 	%f28, [%rd14];
	fma.rn.f32 	%f29, %f28, %f10, %f8;
	st.global.f32 	[%rd14], %f29;

$L__BB0_11:
	ret;

}
	// .globl	matvec_reservoir_kernel
.visible .entry matvec_reservoir_kernel(
	.param .u64 matvec_reservoir_kernel_param_0,
	.param .u64 matvec_reservoir_kernel_param_1,
	.param .u64 matvec_reservoir_kernel_param_2,
	.param .f32 matvec_reservoir_kernel_param_3,
	.param .f32 matvec_reservoir_kernel_param_4,
	.param .u32 matvec_reservoir_kernel_param_5
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<35>;
	.reg .b32 	%r<24>;
	.reg .b64 	%rd<27>;


	ld.param.u64 	%rd16, [matvec_reservoir_kernel_param_0];
	ld.param.u64 	%rd17, [matvec_reservoir_kernel_param_1];
	ld.param.u64 	%rd15, [matvec_reservoir_kernel_param_2];
	ld.param.f32 	%f9, [matvec_reservoir_kernel_param_3];
	ld.param.f32 	%f10, [matvec_reservoir_kernel_param_4];
	ld.param.u32 	%r11, [matvec_reservoir_kernel_param_5];
	cvta.to.global.u64 	%rd1, %rd17;
	cvta.to.global.u64 	%rd2, %rd16;
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r14, %tid.x;
	mad.lo.s32 	%r1, %r13, %r12, %r14;
	setp.ge.s32 	%p1, %r1, %r11;
	@%p1 bra 	$L__BB1_11;

	setp.lt.s32 	%p2, %r11, 1;
	mov.f32 	%f34, 0f00000000;
	@%p2 bra 	$L__BB1_8;

	add.s32 	%r16, %r11, -1;
	and.b32  	%r23, %r11, 3;
	setp.lt.u32 	%p3, %r16, 3;
	mov.f32 	%f34, 0f00000000;
	mov.u32 	%r22, 0;
	@%p3 bra 	$L__BB1_5;

	sub.s32 	%r21, %r11, %r23;
	mul.lo.s32 	%r18, %r11, %r1;
	mul.wide.s32 	%rd18, %r18, 4;
	add.s64 	%rd24, %rd2, %rd18;
	mov.f32 	%f34, 0f00000000;
	mov.u32 	%r22, 0;
	mov.u64 	%rd23, %rd1;

$L__BB1_4:
	.pragma "nounroll";
	ld.global.nc.f32 	%f15, [%rd23];
	ld.global.nc.f32 	%f16, [%rd24];
	fma.rn.f32 	%f17, %f16, %f15, %f34;
	ld.global.nc.f32 	%f18, [%rd23+4];
	ld.global.nc.f32 	%f19, [%rd24+4];
	fma.rn.f32 	%f20, %f19, %f18, %f17;
	ld.global.nc.f32 	%f21, [%rd23+8];
	ld.global.nc.f32 	%f22, [%rd24+8];
	fma.rn.f32 	%f23, %f22, %f21, %f20;
	ld.global.nc.f32 	%f24, [%rd23+12];
	ld.global.nc.f32 	%f25, [%rd24+12];
	fma.rn.f32 	%f34, %f25, %f24, %f23;
	add.s32 	%r22, %r22, 4;
	add.s64 	%rd24, %rd24, 16;
	add.s64 	%rd23, %rd23, 16;
	add.s32 	%r21, %r21, -4;
	setp.ne.s32 	%p4, %r21, 0;
	@%p4 bra 	$L__BB1_4;

$L__BB1_5:
	setp.eq.s32 	%p5, %r23, 0;
	@%p5 bra 	$L__BB1_8;

	mul.wide.s32 	%rd19, %r22, 4;
	add.s64 	%rd26, %rd1, %rd19;
	mad.lo.s32 	%r19, %r11, %r1, %r22;
	mul.wide.s32 	%rd20, %r19, 4;
	add.s64 	%rd25, %rd2, %rd20;

$L__BB1_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f26, [%rd26];
	ld.global.nc.f32 	%f27, [%rd25];
	fma.rn.f32 	%f34, %f27, %f26, %f34;
	add.s64 	%rd26, %rd26, 4;
	add.s64 	%rd25, %rd25, 4;
	add.s32 	%r23, %r23, -1;
	setp.ne.s32 	%p6, %r23, 0;
	@%p6 bra 	$L__BB1_7;

$L__BB1_8:
	mul.f32 	%f8, %f34, %f9;
	cvta.to.global.u64 	%rd21, %rd15;
	mul.wide.s32 	%rd22, %r1, 4;
	add.s64 	%rd14, %rd21, %rd22;
	setp.eq.f32 	%p7, %f10, 0f00000000;
	@%p7 bra 	$L__BB1_10;
	bra.uni 	$L__BB1_9;

$L__BB1_10:
	st.global.f32 	[%rd14], %f8;
	bra.uni 	$L__BB1_11;

$L__BB1_9:
	ld.global.f32 	%f28, [%rd14];
	fma.rn.f32 	%f29, %f28, %f10, %f8;
	st.global.f32 	[%rd14], %f29;

$L__BB1_11:
	ret;

}
	// .globl	leaky_integration_kernel
.visible .entry leaky_integration_kernel(
	.param .u64 leaky_integration_kernel_param_0,
	.param .u64 leaky_integration_kernel_param_1,
	.param .u64 leaky_integration_kernel_param_2,
	.param .f32 leaky_integration_kernel_param_3,
	.param .u32 leaky_integration_kernel_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<29>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [leaky_integration_kernel_param_0];
	ld.param.u64 	%rd2, [leaky_integration_kernel_param_1];
	ld.param.u64 	%rd3, [leaky_integration_kernel_param_2];
	ld.param.f32 	%f1, [leaky_integration_kernel_param_3];
	ld.param.u32 	%r2, [leaky_integration_kernel_param_4];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB2_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.nc.f32 	%f2, [%rd6];
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f1;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.nc.f32 	%f5, [%rd8];
	abs.f32 	%f6, %f5;
	mul.f32 	%f7, %f6, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f8, %f7;
	add.f32 	%f9, %f8, 0f3F800000;
	rcp.approx.ftz.f32 	%f10, %f9;
	mov.f32 	%f11, 0fC0000000;
	fma.rn.f32 	%f12, %f10, %f11, %f3;
	setp.ge.f32 	%p2, %f6, 0f41102CB4;
	selp.f32 	%f13, 0f3F800000, %f12, %p2;
	mov.b32 	%r6, %f13;
	mov.b32 	%r7, %f5;
	and.b32  	%r8, %r7, -2147483648;
	or.b32  	%r9, %r8, %r6;
	mov.b32 	%f14, %r9;
	mul.f32 	%f15, %f5, %f5;
	mov.f32 	%f16, 0fBD563CAE;
	mov.f32 	%f17, 0f3C80F082;
	fma.rn.f32 	%f18, %f17, %f15, %f16;
	mov.f32 	%f19, 0f3E085941;
	fma.rn.f32 	%f20, %f18, %f15, %f19;
	mov.f32 	%f21, 0fBEAAA9ED;
	fma.rn.f32 	%f22, %f20, %f15, %f21;
	mov.f32 	%f23, 0f00000000;
	fma.rn.f32 	%f24, %f22, %f15, %f23;
	fma.rn.f32 	%f25, %f24, %f5, %f5;
	setp.ge.f32 	%p3, %f6, 0f3F19999A;
	selp.f32 	%f26, %f14, %f25, %p3;
	mul.f32 	%f27, %f26, %f1;
	fma.rn.f32 	%f28, %f4, %f2, %f27;
	cvta.to.global.u64 	%rd9, %rd1;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f28;

$L__BB2_2:
	ret;

}

