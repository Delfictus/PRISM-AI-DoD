# API Testing Workflow
# Runs comprehensive API tests on every push and PR

name: API Testing

on:
  push:
    branches: [ worker-8-*, release/*, main ]
  pull_request:
    branches: [ worker-8-*, release/*, main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Build API server
  build-api-server:
    name: Build API Server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            03-Source-Code/target
          key: ${{ runner.os }}-cargo-api-${{ hashFiles('**/Cargo.lock') }}

      - name: Build API server
        run: cargo build --release --bin api_server
        working-directory: 03-Source-Code

      - name: Upload API server binary
        uses: actions/upload-artifact@v3
        with:
          name: api-server
          path: 03-Source-Code/target/release/api_server
          retention-days: 7

  # Run functional tests
  functional-tests:
    name: Functional API Tests
    runs-on: ubuntu-latest
    needs: [build-api-server]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download API server
        uses: actions/download-artifact@v3
        with:
          name: api-server
          path: ./bin

      - name: Make binary executable
        run: chmod +x ./bin/api_server

      - name: Start API server
        run: |
          ./bin/api_server &
          sleep 5
          curl -f http://localhost:8080/health || exit 1

      - name: Run functional tests
        run: |
          cd 03-Source-Code
          chmod +x test_all_apis.sh
          ./test_all_apis.sh
        env:
          API_URL: http://localhost:8080

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: api-test-results
          path: 03-Source-Code/api_test_results.json
          retention-days: 30

  # Run load tests
  load-tests:
    name: Load Testing
    runs-on: ubuntu-latest
    needs: [build-api-server]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download API server
        uses: actions/download-artifact@v3
        with:
          name: api-server
          path: ./bin

      - name: Make binary executable
        run: chmod +x ./bin/api_server

      - name: Start API server
        run: |
          ./bin/api_server &
          sleep 5
          curl -f http://localhost:8080/health || exit 1

      - name: Run load tests
        run: |
          cd 03-Source-Code
          chmod +x load_test.sh
          NUM_REQUESTS=100 CONCURRENCY=10 ./load_test.sh
        env:
          API_URL: http://localhost:8080

  # Docker build test
  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: 03-Source-Code
          file: 03-Source-Code/Dockerfile
          push: false
          tags: prism-ai/api-server:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker run -d --name prism-api -p 8080:8080 prism-ai/api-server:test
          sleep 10
          curl -f http://localhost:8080/health || exit 1
          docker logs prism-api
          docker stop prism-api

  # Summary
  api-testing-success:
    name: API Testing Success
    runs-on: ubuntu-latest
    needs: [functional-tests, load-tests, docker-build]
    steps:
      - name: All tests passed
        run: echo "All API tests passed successfully!"
